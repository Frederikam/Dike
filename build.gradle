buildscript {
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
    }
}
plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.gorylenko.gradle-git-properties' version '1.4.17'
    id 'com.github.johnrengelman.shadow' version '2.0.1'
}
apply plugin: 'org.junit.platform.gradle.plugin'


group = 'com.fredboat'
version = '1.0'
description = "Discord Gateway"
mainClassName = 'fredboat.dike.Launcher'
ext {
    moduleName = 'Dike'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
compileJava.options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    archiveName = "Dike.jar"
}

repositories {
    mavenCentral()                     // main maven repo
    jcenter()                          // JDA and some other stuff
    mavenLocal()                       // useful for developing
    maven { url "https://jitpack.io" } // build projects directly from github
}

dependencies {
    compile group: 'org.java-websocket', name: 'Java-WebSocket', version: '1.3.5'
    compile group: 'com.neovisionaries', name: 'nv-websocket-client', version: '2.3'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.8.RELEASE'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.2'
    compile group: 'org.json', name: 'json', version: '20171018'
    compile group: 'com.jsoniter', name: 'jsoniter', version: '0.9.17'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.0'
    compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.0'
    //tests
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.1'
    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.1'
    // To avoid compiler warnings about @API annotations in JUnit code.
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0'
}

import org.gradle.api.tasks.wrapper.Wrapper.DistributionType

task wrapper(type: Wrapper) {
    gradleVersion = '4.2.1'
    distributionType = DistributionType.ALL
}

import org.apache.tools.ant.filters.ReplaceTokens

processResources {
    //inject values into app.properties
    filter ReplaceTokens, tokens: [
            "project.version"   : project.version,
            "project.groupId"   : project.group,
            "project.artifactId": project.ext.moduleName,
            "env.BUILD_NUMBER"  : (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'DEV')
    ]
}